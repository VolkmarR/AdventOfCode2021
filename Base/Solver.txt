namespace Day[Day];

public class Day[Day]Tests
{
    private readonly ITestOutputHelper Output;
    public Day[Day]Tests(ITestOutputHelper output) => Output = output;

    [Fact] public void Step1WithExample() => new Day[Day]Solver().ExecuteExample1("??");
        
    [Fact] public void Step2WithExample() => new Day[Day]Solver().ExecuteExample2("??");

    [Fact] public void Step1WithPuzzleInput() => Output.WriteLine(new Day[Day]Solver().ExecutePuzzle1());
        
    [Fact] public void Step2WithPuzzleInput() => Output.WriteLine(new Day[Day]Solver().ExecutePuzzle2());
}

public class Day[Day]Solver : SolverBase
{
    // List<??> Data;

    protected override void Parse(List<string> data)
    {
        // Data = new();
    }

    protected override object Solve1()
    {
        throw new Exception("Solver error");
    }

    protected override object Solve2()
    {
        throw new Exception("Solver error");
    }
}
